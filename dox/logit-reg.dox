/*! \page doc-logit Log-logistic loss
 *  \brief Log-Logistic loss problems
 *
 * <a href="https://en.wikipedia.org/wiki/Loss_functions_for_classification#Logistic_loss">Log-logistic loss</a>
 * is a popular loss function used widely in classification problems in machine learning 
 * and statistics. 
 *
 * The \link LogLogisticLoss log-logistic\endlink loss function is given by
 *
 * \f[
 *  L_\mu(x) = \mu \sum_{i=1}^{n} -\ln \sigma(x_i),
 * \f]
 *
 * where \f$\sigma(\tau)=e^{\tau}/(1+e^{\tau})\f$. 
 *
 * The log-logistic \f$\ell_1\f$-regularized optimization problem is formulated
 * as follows
 *
 * \f[
 * \mathrm{minimize}_{x} L_1(Ax-b) + \lambda \|x\|_1,
 * \f]
 *
 *
 * where \f$\lambda>0\f$ is a regularization parameter.
 * 
 * Let us see how one can formulate such an optimization problem and solve it
 * using libforbes:
 * 
 * \code{.cpp}
 * const size_t n = 5;
 * const size_t m = 4;
 * double data_A[] = {
 *   1,  2, -1, -1,
 *  -2, -1,  0, -1,
 *   3,  0,  4, -1,
 *  -4, -1, -3,  1,
 *   5,  3,  2,  3 };
 *   double data_minus_b[] = {-1, -2, -3, -4};
 *   Matrix A(m, n, data_A);
 *   Matrix minus_b(m, 1, data_minus_b);
 * \endcode
 *
 * We should then define the problem's functions and linear operator \f$A\f$
 *
 * \code{.cpp}
 *  LinearOperator * OpA = new MatrixOperator(A);
 *  Function * f = new LogLogisticLoss();
 *  double lambda = 3.50;
 *  Function * g = new Norm1(lambda);
 * \endcode
 * 
 * It is now straightfoward to construct our optimization problem and solve it
 * as follows
 * 
 * \code{.cpp}
 *  FBProblem prob = FBProblem(*f, *OpA, minus_b, *g);
 * 
 *  // Specify an initial guess
 *  Matrix x0(n, 1);
 *
 *  // Specify the parameter gamma
 *  double gamma = 0.1;
 *
 *  // Construct a new instance of a solver (e.g., FBSplitting or FBSplittingFast)
 *  FBSplittingFast * solver = new FBSplittingFast(prob, x0, gamma);
 *
 *  // Run the solver and get the solution
 *  solver->run();
 *  Matrix xstar = solver->getSolution();
 * \endcode
 * 
 * The minimizer of the above problem is then found to be
 *
 * \f[
 * x^\star = \begin{bmatrix} 0&       0&       0&       0&   1.228\end{bmatrix}^\top,
 * \f]
 * 
 * in \f$29\f$ iterations.
 */