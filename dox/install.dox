/* INSTALLATION */

/*! \page doc-install Installation Guide
 *
 * \brief Installation guide
 * 
 * Libforbes comes with an installation script (\c install.sh) which you can use
 * to setup the library automatically. 
 *
 * However, if for any reason you would like to
 * compile it manually, you will first need to install and setup the following 
 * dependencies:
 * 
 * \section dependencies Dependencies
 * Libforbes depends on the following third-part libraries:
 *   1. <a href="http://www.openblas.net/">openblas</a>
 *   2. <a href="http://faculty.cse.tamu.edu/davis/suitesparse.html">SuiteSparse</a>
 *   3. <a href="http://www.netlib.org/blas/">BLAS</a>, <a href="http://www.netlib.org/lapack/">lapack and lapacke</a>
 *
 * To build libforbes you will need:
 *   1. <a href="https://www.gnu.org/software/make/">make</a>
 *   2. <a href="http://linux.die.net/man/1/g++">g++ compiler</a>
 *   3. <a href="https://www.gnu.org/software/wget/">wget</a> (optional)
 * 
 * \subsection dep-repos Install libraries from repos
 * Certain libraries can be installed using \c apt. Let us first install \c BLAS
 * and \c LAPACK
 *
 * \code{.sh}
 * sudo apt-get -y install libblas-dev checkinstall
 * sudo apt-get -y install liblapack-dev checkinstall
 * \endcode
 *
 * We need to download and install openblas and then create a symbolic link of 
 * libopenblas.a in /usr/lib for it to be discoverable.
 *
 * \code{.sh}
 * sudo apt-get -y install libopenblas-base checkinstall
 * if [ ! -e "/usr/lib/libopenblas.a" ]; then
 *   if [ -r "/usr/lib/openblas-base/libopenblas.a" ]; then
 *     sudo ln -s /usr/lib/openblas-base/libopenblas.a /usr/lib/;
 *   fi
 * fi
 * \endcode
 * 
 *
 * \subsection dep-suitesparse Install SuiteSparse
 * 
 * We will download and compile SuiteSparse in the \c libs subfolder of libforbes:
 *
 * \code{.sh}
 * mkdir -p libs
 * wget http://faculty.cse.tamu.edu/davis/SuiteSparse/SuiteSparse-4.4.6.tar.gz -O ./libs/SuiteSparse.tar.gz
 * tar xvf ./libs/SuiteSparse.tar.gz -C ./libs
 * rm -rf ./libs/SuiteSparse.tar.gz
 * cd ./libs/SuiteSparse
 * make
 * cd ../../
 * \endcode
 * 
 * \subsection dep-lapacke Install Lapacke
 * In some systems, we may install lapacke using apt. Since, however, this is not
 * always the case, this is how we may proceed:
 *
 * \code{.sh}
 * wget http://www.netlib.org/lapack/lapack-3.6.0.tgz -O ./libs/lapack-3.6.0.tgz
 * tar zxf ./libs/lapack-3.6.0.tgz -C ./libs
 * rm ./libs/lapack-3.6.0.tgz
 * cd ./libs/lapack-3.6.0/
 * cp make.inc.example make.inc
 * cd LAPACKE
 * make
 * sudo cp ./include/lapacke.h /usr/include/
 * sudo cp ./include/lapacke_mangling.h /usr/include/
 * sudo cp ./include/lapacke_utils.h /usr/include/
 * cd ..
 * sudo cp ./liblapacke.a /usr/lib
 * cd ../../
 * \endcode
 *
 * \section config Configure libforbes
 * Having installed all dependencies we now need to configure libforbes.
 *
 * If you have used the installation script \c install.sh you don't need to 
 * provide any further configuration. 
 *
 * Otherwise, you can edit file \c config.mk to modify some compilation parameters.
 *
 * This is an example of how file \c config.mk should look like:
 *
 * \code{.mk}
 * # Path to your SuiteSparse directory
 * SS_DIR = /home/chung/Documents/MATLAB/SuiteSparse
 * 
 * # Extra headers and libraries paths
 * IEXTRA = /usr/include
 * LEXTRA = /usr/lib
 * \endcode
 * 
 * \section make-libforbes Compile libforbes
 *
 * To compile libforbes you can simply use the \c Makefile provided; simply run:
 *
 * \code{.sh}
 * make
 * \endcode
 * 
 * To do a clean make, run:
 * 
 * \code{.sh}
 * make clean all
 * \endcode
 *
 * To compile the library and all tests, run:
 * 
 * \code{.sh}
 * make test
 * \endcode
 *
 * To get help about \c make, run:
 * \code{.sh}
 * make help
 * \endcode
 * 
 * \section use-libforbes Use libforbes
 * To use \c libforbes
 *
 * 1. Include the header file ForBES.h
 * 2. Link to the libforbes static library (libforbes.a) using \c -lforbes
 * 3. Link to the above third-party dependencies which are necessary for 
 *    libforbes to work.
 *
 * 
 *
 * 
 *  
 */