digraph "Graphical Class Hierarchy"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="LinearOperator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_linear_operator.html",tooltip="A linear operator T(x) "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="MatrixOperator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_matrix_operator.html",tooltip="A linear operator T(x) = M*x, where M is a Matrix. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="OpAdjoint",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_adjoint.html",tooltip="Adjoint of a given linear operator. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="OpComposition",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_composition.html",tooltip="The composition of two linear operators T(x) = A(B(x)) "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="OpDCT2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_d_c_t2.html",tooltip="The Discrete Cosine Transform Type II (DCT-II) "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="OpDCT3",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_d_c_t3.html",tooltip="The Discrete Cosine Transform Type III (DCT-III or IDCT) "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="OpGradient",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_gradient.html",tooltip="Discrete gradient transform. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="OpGradient2D",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_gradient2_d.html"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="OpLinearCombination",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_linear_combination.html",tooltip="Linear combination of two linear operators T(x) = a*A(x) + b*B(x) "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="OpLTI",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_l_t_i.html",tooltip="OpLTI simulates a LTI system with zero initial condition "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="OpReverseVector",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_reverse_vector.html",tooltip="A linear operator T(x) which reverses the order of elements in x "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="OpSum",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_op_sum.html",tooltip="The sum of two linear operators T(x) = A(x) + B(x) "];
}
